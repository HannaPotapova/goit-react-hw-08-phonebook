{"version":3,"file":"static/js/139.3894d09f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/selectors.js","components/ContactList/ContactList.js","../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"button_del\":\"ContactList_button_del__yWrCb\"};","export const getStateContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getStateFilter = state => state.filter.value;\n","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getStateContacts, getStateFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contactsList = useSelector(getStateContacts);\n  const filterValue = useSelector(getStateFilter);\n  const dispatch = useDispatch();\n\n  const getFilterContact = () => {\n    if (filterValue === '') {\n      return contactsList;\n    }\n    const normalizedFilter = filterValue.toLowerCase();\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filterContacts = getFilterContact();\n\n  return (\n    <ul>\n      {filterContacts?.map(({ id, name, number }) => (\n        <li key={id} className={css.item}>\n          {name}:{number}\n          <button\n            type=\"submit\"\n            className={css.button_del}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"box_contact\":\"ContactForm_box_contact__VcblK\",\"button\":\"ContactForm_button__eSwX9\",\"label\":\"ContactForm_label__-cVXI\"};","import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getStateContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const arrContacts = useSelector(getStateContacts);\n  const formSubmit = e => {\n    e.preventDefault();\n    const forms = e.currentTarget.elements;\n    const normalizedFilter = forms.name.value.toLowerCase();\n\n    const checkByName = arrContacts.find(\n      contact => contact.name.toLowerCase() === normalizedFilter\n    );\n    if (checkByName) {\n      e.currentTarget.reset();\n      alert('this contacts is written in phonebook');\n      return;\n    }\n    dispatch(\n      addContact({\n        name: forms.name.value,\n        number: forms.number.value,\n        id: nanoid(),\n      })\n    );\n    e.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={formSubmit}\n        autoComplete=\"off\"\n        className={css.box_contact}\n      >\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter name\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"000-000-00-00\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import { useDispatch } from 'react-redux';\nimport { filter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(filter(value));\n  };\n  return (\n    <>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={e => {\n            changeFilter(e);\n          }}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter a search name\"\n        />\n      </label>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Phonebook</title>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getStateContacts","state","contacts","items","getIsLoading","isLoading","getStateFilter","filter","value","ContactList","contactsList","useSelector","filterValue","dispatch","useDispatch","filterContacts","normalizedFilter","toLowerCase","contact","name","includes","getFilterContact","map","id","number","className","css","type","onClick","deleteContact","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","ContactForm","arrContacts","onSubmit","e","preventDefault","forms","currentTarget","elements","find","reset","alert","addContact","autoComplete","pattern","title","placeholder","required","Filter","onChange","changeFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}